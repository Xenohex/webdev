/*
CSS: Cascading Style Sheets
grouped styles are a ruleset or css rule
selector: div.bolt-text
property: font-weight, color, height
value: 700, red, 200px
declaration: "font-weight: 700;"

div.bolt-text {
    font-weight: 700;
    color: red;
    height: 200px;
}

type selector
div {}

class selector
.alert-text {}

ID selector
#title {}

grouping selector (comma separated)
.read,
.unread {}

select elements that have both the "subsection" and "header" classes
.subsection.header {}

select elements that have both the "subsection" class and "preview" ID
.subsection#preview {}

select elements that are children of the "ancestor" class but also have the "contents" class
.ancestor .contents {} (there is no limit to how many combinators you can add to a rule)


*/


/* universal selector */
* {
    line-height: 1.5;
}

/* type selector */
body {
    font-family: Arial, Helvetica, sans-serif;
}

/* ========== CHALLENGE 1 ========== //
//
// Use the type selector to:
// 1. Set the image width to 200px
// 2. Set the list style of <ul> to none
// 3. Add a dark red color to the <h1>
//
*/

img {
    width: 200px;
}

ul {
    list-style: none;
}

h1 {
    color: darkred;
}

/*
class selector
css class: attribute used to define a group of html elements in order to apply unique styling to those elements
*/


/* ========== CHALLENGE 2 ========== //
//
// 1. Style the recipe card so that it has a 
//      -- background color of #FFFAFA
//      -- text is aligned center
// 2. Set text inside recipe-content to align left
//
*/
.recipe-card {
    width:400px;
    background-color: #FFFAFA;
    text-align: center;
}

.recipe-content {
    text-align: left;
}
/*
Not limited to a single class, as elements can have multiple
*/

/* can also use element id with #
    id's must be unique. you shouldn't use them for styling */
#container {
    border: 1px solid red;
}

/* can also group selectors */
h2,
a {
    text-transform: uppercase;
}

/* can chain selectors 
    this style will only affect elements with both classes in them*/
.recipe-card.feature {
    border: 2px solid darkred;
}

/* adding a class in front of the elements makes those declarations
 only apply to elements that are inside of that specified class */
.recipe-card h2,
.recipe-card a {
    text-transform: uppercase;
}

/* ========== CHALLENGE 3 ========== //
//
// 1. Change <h2> elements within a <ul> and <li> to be 16px
// 2. Update recipe card link styles, set:
//      -- background color to #fc9400
//      -- text color to white
//      -- remove underline
*/
ul li h2 {
    font-size: 16px;
}

.recipe-card a {
    background-color: #fc9400;
    color: white;
    text-decoration: none;
}

.container {
    box-sizing: border-box;
}
