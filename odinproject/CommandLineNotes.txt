General Syntax of a shell command
    $ ls -F /
        $ = prompt
        ls = command
        -F = option
        / = argument
Useful commands
    pwd - prints the directory you are in
    cd - chooses directory. leave blank to take you to home directory 
        cd .. takes you up one level. using a leading / changes the search from relative directory to aboluste directory
        cd - takes you to the last directory you were in (not necessarily the one a level up)
    ls - view contents of current directory 
        add -F to see types of contents, add visible directory after to see ITS contents
        add -s to see sizes. -S to sort by sizes
    clear - clears terminal
    --help - help?
    man <command> - displays command's manual (press Q to exit)
    mkdir <dirname> - makes a new directory
        -p allows you to make subdirectories and their parent directories at the same time
    nano <name> - basically makes a new text file and allows you to edit it in the terminal
    mv <filename> <directory/(newfilename)> - moves file to target directory with specified (new) name
        can be used to rename files, but be careful of overwriting old ones of the same name.
        works on directories. the directory in the command can be omitted to move file to same directory (renaming it)
    cp <filename> <directory/(newfilename)> - copies file to target directory with specified (new) name
        adding -r and entering a directory instead of a file copies the directory and everything in it (r = recursive)
        you can copy multiple files as long as the last entry is a directory
    rm <file/directory> - remove file/directory 
        permanent, don't make any mistakes here
        add -r for directories (USE WITH CARE)
more advanced stuff
    wc <file> - prints lines, words, and characters in files
        -l only shows lines
        -m only shows characters
        -w only shows words
    cat <filename(s)> - prints contents of one or more files in the terminal
    less <filename(s)> - just like cat, but only prints a full page worth of information
        note: this actually prints the info in a page format outside of the normal console.
            press spacebar to go forward a page, and b to go back. q to quit.
    sort <filename> - sorts a file. leave no options to sort alphanumerically
        -n sorts numbers by their value
        (does not change the file, just the display)
    head <filename> prints first few lines of a file
        -n <number> option specifies how many lines to prints
    echo <string> prints a string
    cut <separation option> <delimiter?> <field option> <field number> <filename>
        -d separation option indicates the use of a delimiter
        -f field option with 2 field number extracts the second field or column
        example: $ cut -d , -f 2 animals.csv
    uniq <filename> filters out adjacent matching lines
        -c option gives a count of the number of times a line occurs in its input


useful notes
    add -i to any of these commands for an interactive bonus
    * wildcard (basically means anything goes.); represents any amount of characters
    ? wildcard but only represents one character
    > <filename> prints the results of a command to a file
        overwrites existing file if there is one
    >> <filename> adds onto an existing file if it exists
    | (<command> | <command> ...) pipes a command's result into another command
